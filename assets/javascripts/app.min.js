(function(window, document, $, undefined){


/* **********************************************
     Begin enquire.js
********************************************** */

// enquire.js v1.5.6 - Awesome Media Queries in JavaScript
// Copyright (c) 2013 Nick Williams - http://wicky.nillia.ms/enquire.js
// License: MIT (http://www.opensource.org/licenses/mit-license.php)


window.enquire = (function(matchMedia) {

    "use strict";

    /**
     * Helper function for iterating over a collection
     *
     * @param collection
     * @param fn
     */
    function each(collection, fn) {
        var i      = 0,
            length = collection.length,
            cont;

        for(i; i < length; i++) {
            cont = fn(collection[i], i);
            if(cont === false) {
                break; //allow early exit
            }
        }
    }

    /**
     * Helper function for determining whether target object is an array
     *
     * @param target the object under test
     * @return {Boolean} true if array, false otherwise
     */
    function isArray(target) {
        return Object.prototype.toString.apply(target) === "[object Array]";
    }

    /**
     * Helper function for determining whether target object is a function
     *
     * @param target the object under test
     * @return {Boolean} true if function, false otherwise
     */
    function isFunction(target) {
        return typeof target === "function";
    }

    /**
     * Delegate to handle a media query being matched and unmatched.
     *
     * @param {object} options
     * @param {function} options.match callback for when the media query is matched
     * @param {function} [options.unmatch] callback for when the media query is unmatched
     * @param {function} [options.setup] one-time callback triggered the first time a query is matched
     * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
     * @constructor
     */
    function QueryHandler(options) {
        this.initialised = false;
        this.options = options;

        if(!options.deferSetup) {
			this.setup();
		}
    }
    QueryHandler.prototype = {

        /**
         * coordinates setup of the handler
         *
         * @function
         */
        setup : function(e) {
            if(this.options.setup){
                this.options.setup(e);
            }
            this.initialised = true;
        },

        /**
         * coordinates setup and triggering of the handler
         *
         * @function
         * @param [e] the browser event which triggered a match
         */
        on : function(e) {
            if(!this.initialised){
                this.setup(e);
            }
            this.options.match(e);
        },

        /**
         * coordinates the unmatch event for the handler
         *
         * @function
         * @param [e] the browser event which triggered a match
         */
        off : function(e) {
            if(this.options.unmatch){
                this.options.unmatch(e);
            }
        },

        /**
         * called when a handler is to be destroyed.
         * delegates to the destroy or unmatch callbacks, depending on availability.
         *
         * @function
         */
        destroy : function() {
            if(this.options.destroy) {
                this.options.destroy();
            }
            else {
                this.off();
            }
        },

        /**
         * determines equality by reference.
         * if object is supplied compare options, if function, compare match callback
         *
         * @function
         * @param {object || function} [target] the target for comparison
         */
        equals : function(target) {
            return this.options === target || this.options.match === target;
        }

    };
/**
 * Represents a single media query, manages it's state and registered handlers for this query
 *
 * @constructor
 * @param {string} query the media query string
 * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
 */
function MediaQuery(query, isUnconditional) {
    this.query = query;
    this.isUnconditional = isUnconditional;
    
    this.handlers = [];
    this.matched = false;
}
MediaQuery.prototype = {

    /**
     * tests whether this media query is currently matching
     *
     * @function
     * @returns {boolean} true if match, false otherwise
     */
    matchMedia : function() {
        return matchMedia(this.query).matches;
    },

    /**
     * add a handler for this query, triggering if already active
     *
     * @function
     * @param {object} handler
     * @param {function} handler.match callback for when query is activated
     * @param {function} [handler.unmatch] callback for when query is deactivated
     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
     * @param {boolean} [turnOn=false] should the handler be turned on if the query is matching?
     */
    addHandler : function(handler, turnOn) {
        var qh = new QueryHandler(handler);
        this.handlers.push(qh);

        turnOn && this.matched && qh.on();
    },

    /**
     * removes the given handler from the collection, and calls it's destroy methods
     *
     * @function
     * @param {object || function} handler the handler to remove
     */
    removeHandler : function(handler) {
        var handlers = this.handlers;
        each(handlers, function(h, i) {
            if(h.equals(handler)) {
                h.destroy();
                return !handlers.splice(i,1); //remove from array and exit each early
            }
        });
    },

    /*
     * assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
     *
     * @function
     */
    assess : function(e) {
        if(this.matchMedia() || this.isUnconditional) {
            this.match(e);
        }
        else {
            this.unmatch(e);
        }
    },

    /**
     * activates a query.
     * callbacks are fired only if the query is currently unmatched
     *
     * @function
     * @param {Event} [e] browser event if triggered as the result of a browser event
     */
    match : function(e) {
        if(this.matched) {
			return; //already on
		}

        each(this.handlers, function(handler) {
            handler.on(e);
        });
        this.matched = true;
    },

    /**
     * deactivates a query.
     * callbacks are fired only if the query is currently matched
     *
     * @function
     * @param {Event} [e] browser event if triggered as the result of a browser event
     */
    unmatch : function(e) {
        if(!this.matched) {
			return; //already off
        }

        each(this.handlers, function(handler){
			handler.off(e);
        });
        this.matched = false;
    }
};
    /**
     * Allows for reigstration of query handlers.
     * Manages the  query handler's state and is responsible for wiring up browser events
     *
     * @constructor
     */
    function MediaQueryDispatch () {
        if(!matchMedia) {
            throw new Error('matchMedia is required');
        }

        var capabilityTest = new MediaQuery('only all');
        this.queries = {};
        this.listening = false;
        this.browserIsIncapable = !capabilityTest.matchMedia();
    }

    MediaQueryDispatch.prototype = {

        /**
         * Registers a handler for the given media query
         *
         * @function
         * @param {string} q the media query
         * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
         * @param {function} options.match fired when query matched
         * @param {function} [options.unmatch] fired when a query is no longer matched
         * @param {function} [options.setup] fired when handler first triggered
         * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
         * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
         */
        register : function(q, options, shouldDegrade) {
            var queries         = this.queries,
                isUnconditional = shouldDegrade && this.browserIsIncapable,
                listening       = this.listening;

            if(!queries.hasOwnProperty(q)) {
                queries[q] = new MediaQuery(q, isUnconditional);

                this.listening && queries[q].assess();
            }

            //normalise to object
            if(isFunction(options)) {
                options = {
                    match : options
                };
            }
            //normalise to array
            if(!isArray(options)) {
                options = [options];
            }
            each(options, function(handler) {
                queries[q].addHandler(handler, listening);
            });

            return this;
        },

        /**
         * unregisters a query and all it's handlers, or a specific handler for a query
         *
         * @function
         * @param {string} q the media query to target
         * @param {object || function} [handler] specific handler to unregister
         */
        unregister : function(q, handler) {
            var queries = this.queries;

            if(!queries.hasOwnProperty(q)) {
                return this;
            }
            
            if(!handler) {
                each(this.queries[q].handlers, function(handler) {
                    handler.destroy();
                });
                delete queries[q];
            }
            else {
                queries[q].removeHandler(handler);
            }

            return this;
        },

        /**
         * Tests all media queries and calls relevant methods depending whether
         * transitioning from unmatched->matched or matched->unmatched
         *
         * @function
         * @param {Event} [e] if fired as a result of a browser event,
         * an event can be supplied to propagate to the various media query handlers
         */
        fire : function(e) {
            var queries = this.queries,
                mediaQuery;

            for(mediaQuery in queries) {
                if(queries.hasOwnProperty(mediaQuery)) {
                    queries[mediaQuery].assess(e);
				}
            }
            return this;
        },

        /**
         * sets up listeners for resize and orientation events
         *
         * @function
         * @param {int} [timeout=500] the time (in milliseconds) after which the queries should be handled
         */
        listen : function(timeout) {
            var self = this;

            timeout = timeout || 500;

            //creates closure for separate timed events
            function wireFire(event) {
                var timer;

                window.addEventListener(event, function(e) {
                    timer && clearTimeout(timer);

                    timer = setTimeout(function() {
                        self.fire(e);
                    }, timeout);
                }, false);
            }

            //prevent multiple event handlers
            if(this.listening) {
                return this;
            }

            // any browser that doesn't implement this
            // will not have media query support
            if(window.addEventListener) {
                wireFire('resize');
                wireFire('orientationChange');
            }

            self.fire();
            this.listening = true;
            
            return this;
        }
    };


    return new MediaQueryDispatch();

}(window.matchMedia));

/* **********************************************
     Begin plugins.js
********************************************** */

// Avoid `console` errors in browsers that lack a console.
(function() {
    var method;
    var noop = function () {};
    var methods = [
        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
        'timeStamp', 'trace', 'warn'
    ];
    var length = methods.length;
    var console = (window.console = window.console || {});

    while (length--) {
        method = methods[length];

        // Only stub undefined methods.
        if (!console[method]) {
            console[method] = noop;
        }
    }
}());

if ( !window.requestAnimationFrame ) {

  window.requestAnimationFrame = ( function() {

    return window.webkitRequestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      window.oRequestAnimationFrame ||
      window.msRequestAnimationFrame ||
      function( callback ) {

      window.setTimeout( callback, 1000 / 60 );

    };

  } )();
}



jQuery.fn.wrapInChunks = function(html, chunkSize) {
  chunkSize = chunkSize || 1;
  var items = this.get(),
      rows = [],
      cur = rows[0] = $(html);

  while (items[0]) {
    if (rows[rows.length - 1].children().length === chunkSize) {
      cur = rows[rows.length] = $(html);
    }

    cur.append( items.shift() );
  }

  return this.pushStack(rows);
};


jQuery.fn.padding = function(){

  var self = jQuery(this);
  var data = {};

  try {
    data.left = parseFloat(self.css('padding-left').replace('px', ''));
    data.top = parseFloat(self.css('padding-top').replace('px', ''));
    data.right = parseFloat(self.css('padding-right').replace('px', ''));
    data.bottom = parseFloat(self.css('padding-bottom').replace('px', ''));
  } catch(e) {
    data = {left: 0, top: 0, right: 0, bottom: 0};
  }
  
  return data;
};

jQuery.fn.margin = function(){

  var self = jQuery(this);
  var data = {};
  
  try {
    data.left = parseFloat(self.css('margin-left').replace('px', ''));
    data.top = parseFloat(self.css('margin-top').replace('px', ''));
    data.right = parseFloat(self.css('margin-right').replace('px', ''));
    data.bottom = parseFloat(self.css('margin-bottom').replace('px', ''));
  } catch(e) {
    data = {left: 0, top: 0, right: 0, bottom: 0};
  }
  
  return data;
};


/*
 * jQuery Easing v1.3 - http://gsgd.co.uk/sandbox/jquery/easing/
 *
 * Uses the built in easing capabilities added In jQuery 1.1
 * to offer multiple easing options
 *
 * TERMS OF USE - jQuery Easing
 * 
 * Open source under the BSD License. 
 * 
 * Copyright Ã‚Â© 2008 George McGinley Smith
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, 
 * are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this list of 
 * conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list 
 * of conditions and the following disclaimer in the documentation and/or other materials 
 * provided with the distribution.
 * 
 * Neither the name of the author nor the names of contributors may be used to endorse 
 * or promote products derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
 * OF THE POSSIBILITY OF SUCH DAMAGE. 
 *
*/

// t: current time, b: begInnIng value, c: change In value, d: duration
jQuery.easing['jswing'] = jQuery.easing['swing'];

jQuery.extend( jQuery.easing,
{
  def: 'easeOutQuad',
  swing: function (x, t, b, c, d) {
    //alert(jQuery.easing.default);
    return jQuery.easing[jQuery.easing.def](x, t, b, c, d);
  },
  easeInQuad: function (x, t, b, c, d) {
    return c*(t/=d)*t + b;
  },
  easeOutQuad: function (x, t, b, c, d) {
    return -c *(t/=d)*(t-2) + b;
  },
  easeInOutQuad: function (x, t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t + b;
    return -c/2 * ((--t)*(t-2) - 1) + b;
  },
  easeInCubic: function (x, t, b, c, d) {
    return c*(t/=d)*t*t + b;
  },
  easeOutCubic: function (x, t, b, c, d) {
    return c*((t=t/d-1)*t*t + 1) + b;
  },
  easeInOutCubic: function (x, t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t*t + b;
    return c/2*((t-=2)*t*t + 2) + b;
  },
  easeInQuart: function (x, t, b, c, d) {
    return c*(t/=d)*t*t*t + b;
  },
  easeOutQuart: function (x, t, b, c, d) {
    return -c * ((t=t/d-1)*t*t*t - 1) + b;
  },
  easeInOutQuart: function (x, t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
    return -c/2 * ((t-=2)*t*t*t - 2) + b;
  },
  easeInQuint: function (x, t, b, c, d) {
    return c*(t/=d)*t*t*t*t + b;
  },
  easeOutQuint: function (x, t, b, c, d) {
    return c*((t=t/d-1)*t*t*t*t + 1) + b;
  },
  easeInOutQuint: function (x, t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
    return c/2*((t-=2)*t*t*t*t + 2) + b;
  },
  easeInSine: function (x, t, b, c, d) {
    return -c * Math.cos(t/d * (Math.PI/2)) + c + b;
  },
  easeOutSine: function (x, t, b, c, d) {
    return c * Math.sin(t/d * (Math.PI/2)) + b;
  },
  easeInOutSine: function (x, t, b, c, d) {
    return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;
  },
  easeInExpo: function (x, t, b, c, d) {
    return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;
  },
  easeOutExpo: function (x, t, b, c, d) {
    return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
  },
  easeInOutExpo: function (x, t, b, c, d) {
    if (t==0) return b;
    if (t==d) return b+c;
    if ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;
    return c/2 * (-Math.pow(2, -10 * --t) + 2) + b;
  },
  easeInCirc: function (x, t, b, c, d) {
    return -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;
  },
  easeOutCirc: function (x, t, b, c, d) {
    return c * Math.sqrt(1 - (t=t/d-1)*t) + b;
  },
  easeInOutCirc: function (x, t, b, c, d) {
    if ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;
    return c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;
  },
  easeInElastic: function (x, t, b, c, d) {
    var s=1.70158;var p=0;var a=c;
    if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
    if (a < Math.abs(c)) { a=c; var s=p/4; }
    else var s = p/(2*Math.PI) * Math.asin (c/a);
    return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
  },
  easeOutElastic: function (x, t, b, c, d) {
    var s=1.70158;var p=0;var a=c;
    if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
    if (a < Math.abs(c)) { a=c; var s=p/4; }
    else var s = p/(2*Math.PI) * Math.asin (c/a);
    return a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;
  },
  easeInOutElastic: function (x, t, b, c, d) {
    var s=1.70158;var p=0;var a=c;
    if (t==0) return b;  if ((t/=d/2)==2) return b+c;  if (!p) p=d*(.3*1.5);
    if (a < Math.abs(c)) { a=c; var s=p/4; }
    else var s = p/(2*Math.PI) * Math.asin (c/a);
    if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
    return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;
  },
  easeInBack: function (x, t, b, c, d, s) {
    if (s == undefined) s = 1.70158;
    return c*(t/=d)*t*((s+1)*t - s) + b;
  },
  easeOutBack: function (x, t, b, c, d, s) {
    if (s == undefined) s = 1.70158;
    return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;
  },
  easeInOutBack: function (x, t, b, c, d, s) {
    if (s == undefined) s = 1.70158; 
    if ((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;
    return c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;
  },
  easeInBounce: function (x, t, b, c, d) {
    return c - jQuery.easing.easeOutBounce (x, d-t, 0, c, d) + b;
  },
  easeOutBounce: function (x, t, b, c, d) {
    if ((t/=d) < (1/2.75)) {
      return c*(7.5625*t*t) + b;
    } else if (t < (2/2.75)) {
      return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
    } else if (t < (2.5/2.75)) {
      return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
    } else {
      return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
    }
  },
  easeInOutBounce: function (x, t, b, c, d) {
    if (t < d/2) return jQuery.easing.easeInBounce (x, t*2, 0, c, d) * .5 + b;
    return jQuery.easing.easeOutBounce (x, t*2-d, 0, c, d) * .5 + c*.5 + b;
  }
});

/*
 *
 * TERMS OF USE - EASING EQUATIONS
 * 
 * Open source under the BSD License. 
 * 
 * Copyright Ã‚Â© 2001 Robert Penner
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, 
 * are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this list of 
 * conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list 
 * of conditions and the following disclaimer in the documentation and/or other materials 
 * provided with the distribution.
 * 
 * Neither the name of the author nor the names of contributors may be used to endorse 
 * or promote products derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
 * OF THE POSSIBILITY OF SUCH DAMAGE. 
 *
 */

(function() {
  
  var BrowserDetect = {
    init: function () {
      this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
      this.version = this.searchVersion(navigator.userAgent)
        || this.searchVersion(navigator.appVersion)
        || "an unknown version";
      this.OS = this.searchString(this.dataOS) || "an unknown OS";
      this.webkit = navigator.userAgent ? navigator.userAgent.toString().toLowerCase().indexOf('webkit') != -1 : false;
    },
    searchString: function (data) {
      for (var i=0;i<data.length;i++) {
        var dataString = data[i].string;
        var dataProp = data[i].prop;
        this.versionSearchString = data[i].versionSearch || data[i].identity;
        if (dataString) {
          if (dataString.indexOf(data[i].subString) != -1)
            return data[i].identity;
        }
        else if (dataProp)
          return data[i].identity;
      }
    },
    searchVersion: function (dataString) {
      var index = dataString.indexOf(this.versionSearchString);
      if (index == -1) return;
      return parseFloat(dataString.substring(index+this.versionSearchString.length+1));
    },
    dataBrowser: [
      {
        string: navigator.userAgent,
        subString: "Chrome",
        identity: "Chrome"
      },
      {   string: navigator.userAgent,
        subString: "OmniWeb",
        versionSearch: "OmniWeb/",
        identity: "OmniWeb"
      },
      {
        string: navigator.vendor,
        subString: "Apple",
        identity: "Safari",
        versionSearch: "Version"
      },
      {
        prop: window.opera,
        identity: "Opera"
      },
      {
        string: navigator.vendor,
        subString: "iCab",
        identity: "iCab"
      },
      {
        string: navigator.vendor,
        subString: "KDE",
        identity: "Konqueror"
      },
      {
        string: navigator.userAgent,
        subString: "Firefox",
        identity: "Firefox"
      },
      {
        string: navigator.vendor,
        subString: "Camino",
        identity: "Camino"
      },
      {   // for newer Netscapes (6+)
        string: navigator.userAgent,
        subString: "Netscape",
        identity: "Netscape"
      },
      {
        string: navigator.userAgent,
        subString: "MSIE",
        identity: "Explorer",
        versionSearch: "MSIE"
      },
      {
        string: navigator.userAgent,
        subString: "Gecko",
        identity: "Mozilla",
        versionSearch: "rv"
      },
      {     // for older Netscapes (4-)
        string: navigator.userAgent,
        subString: "Mozilla",
        identity: "Netscape",
        versionSearch: "Mozilla"
      }
    ],
    dataOS : [
      {
        string: navigator.platform,
        subString: "Win",
        identity: "Windows"
      },
      {
        string: navigator.platform,
        subString: "Mac",
        identity: "Mac"
      },
      {
        string: navigator.userAgent,
        subString: "iPhone",
        identity: "iPhone/iPod"
        },
      {
        string: navigator.platform,
        subString: "Linux",
        identity: "Linux"
      }
    ]
  
  };
  
  BrowserDetect.init();
  
  window.$.client = { os : BrowserDetect.OS, browser : BrowserDetect.browser, version: BrowserDetect.version };
  window.BrowserDetect = BrowserDetect;
  
})();





/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */

window.matchMedia = window.matchMedia || (function( doc, undefined ) {

  "use strict";

  var bool,
      docElem = doc.documentElement,
      refNode = docElem.firstElementChild || docElem.firstChild,
      // fakeBody required for <FF4 when executed in <head>
      fakeBody = doc.createElement( "body" ),
      div = doc.createElement( "div" );

  div.id = "mq-test-1";
  div.style.cssText = "position:absolute;top:-100em";
  fakeBody.style.background = "none";
  fakeBody.appendChild(div);

  return function(q){

    div.innerHTML = "&shy;<style media=\"" + q + "\"> #mq-test-1 { width: 42px; }</style>";

    docElem.insertBefore( fakeBody, refNode );
    bool = div.offsetWidth === 42;
    docElem.removeChild( fakeBody );

    return {
      matches: bool,
      media: q
    };

  };

}( document ));


/*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */
(function(){
  // monkeypatch unsupported addListener/removeListener with polling
  if( !window.matchMedia( "" ).addListener ){
    var oldMM = window.matchMedia;
    
    window.matchMedia = function( q ){
      var ret = oldMM( q ),
        listeners = [],
        last = false,
        timer,
        check = function(){
          var list = oldMM( q ),
            unmatchToMatch = list.matches && !last,
            matchToUnmatch = !list.matches && last;
                                                
                                        //fire callbacks only if transitioning to or from matched state
          if( unmatchToMatch || matchToUnmatch ){
            for( var i =0, il = listeners.length; i< il; i++ ){
              listeners[ i ].call( ret, list );
            }
          }
          last = list.matches;
        };
      
      ret.addListener = function( cb ){
        listeners.push( cb );
        if( !timer ){
          timer = setInterval( check, 1000 );
        }
      };

      ret.removeListener = function( cb ){
        for( var i =0, il = listeners.length; i< il; i++ ){
          if( listeners[ i ] === cb ){
            listeners.splice( i, 1 );
          }
        }
        if( !listeners.length && timer ){
          clearInterval( timer );
        }
      };
      
      return ret;
    };
  }
}());

/* **********************************************
     Begin jquery.responsiveImage.js
********************************************** */

(function(window, document, $, undefined){
    
  $.fn.responsiveImage = function(resolution, callback){

    if (! resolution) return;

    $(this).each(function(){
      var self = $(this);
      var node = self.is('noscript') ? self : self.find('noscript');
      var sources = $.parseJSON( node.attr('data-src') );
      var image = sources['image'];

      if (app.helper.detections.isRetina && sources[resolution + '-retina']) {
        image = sources[resolution + '-retina'];
      } else if (sources[resolution]) {
        image = sources[resolution];
      }

      self.addClass('responsive-image-loaded');

      var img = self.find('img');

      if (img.size() > 0) {
        if (img.attr('src') == image.src) return;

        var newImage = $('<img src="'+image.src+'" width="'+image.width+'" height="'+image.height+'">');

        newImage.load(function(){
          newImage.insertAfter(self.find('noscript'));
          self.find('img').not(newImage).remove();
          if (callback) callback();
        });
      } else {
        self.find('img').remove();

        var newImage = $('<img src="'+image.src+'" width="'+image.width+'" height="'+image.height+'">');

        if (callback) {
          newImage.load(callback);
        }

        newImage.insertAfter(self.find('noscript'));
      }
      
      return this;
    });
    
    return this;
  };
  
})(window, window.document, jQuery);

/* **********************************************
     Begin jquery.unveil.js
********************************************** */

/**
 * jQuery Unveil
 * A very lightweight jQuery plugin to lazy load images
 * http://luis-almeida.github.com/unveil
 *
 * Licensed under the MIT license.
 * Copyright 2013 Luís Almeida
 * https://github.com/luis-almeida
 */

;(function($) {

  $.fn.unveil = function(threshold) {

    var $w = $(window),
        th = threshold || 0,
        //retina = window.devicePixelRatio > 1,
        //attrib = retina? "data-src-retina" : "data-src",
        images = this,
        loaded,
        inview,
        source;

    this.one("unveil", function() {
      //source = this.getAttribute(attrib);
      //source = source || this.getAttribute("data-src");
      //if (source) this.setAttribute("src", source);
      $(this).responsiveImage(app.is);
    });

    function unveil() {
      inview = images.filter(function() {
        var $e = $(this),
            wt = $w.scrollTop(),
            wb = wt + $w.height(),
            et = $e.offset().top,
            eb = et + $e.height();

        return eb >= wt - th && et <= wb + th;
      });

      loaded = inview.trigger("unveil");
      images = images.not(loaded);
    }

    $w.scroll(unveil);
    $w.resize(unveil);

    unveil();

    return this;

  };

})(jQuery);



/* **********************************************
     Begin config.js
********************************************** */

var app = {};

/* **********************************************
     Begin helper.js
********************************************** */

app.helper = (function(window, document, $, self, undefined){

  self.detections = {};

  (function(){
    self.detections.isTouchDevice = ('ontouchstart' in window || 'onmsgesturechange' in window);
    self.detections.supportsHistory = (window.history.pushState !== undefined);
    self.detections.isRetina = (window.devicePixelRatio > 1);
    self.detections.supportsTransitions = (function(){
      var v = ['ms', 'Khtml', 'O', 'Moz', 'Webkit', ''];
      while( v.length ) if( v.pop() + 'Transition' in document.body.style ) return true;
      return false;
    })();

    // Hack, hack, hack :)
    // Returns the real elements to scroll (supports window/iframes, documents and regular nodes)
    $.fn._scrollable = function(){
      return this.map(function(){
        var elem = this,
          isWin = !elem.nodeName || $.inArray( elem.nodeName.toLowerCase(), ['iframe','#document','html','body'] ) != -1;

          if( !isWin )
            return elem;

        var doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;
        
        return $.client.browser == 'Safari' || BrowserDetect.webkit || doc.compatMode == 'BackCompat' ?
          doc.body : 
          doc.documentElement;
      });
    };

    self.detections.scrollable = $(window)._scrollable();
  })();

  self.scrollTo = function(pos, speed, ease, holder){
    if (pos === null) return;
    if (ease === null) ease = 'linear';
    if (! speed) speed = 0;

    if (holder) {
      return $(holder).animate({scrollTop: pos}, 1);
    }

    self.detections.scrollable.animate({scrollTop: pos}, speed, ease);
  };

  self.getScrollTop = function(){
    return self.detections.scrollable.scrollTop();
  };

  self.resizeFor = function(timeoutTime){
    var clearResizing = function(){
      clearInterval(intervalID);
      $(window).trigger('resize');
    };

    var triggerResize = function(){
      $(window).trigger('resize');
    };

    var intervalID = setInterval(triggerResize, 10);
    setTimeout(clearResizing, timeoutTime + 100);
  };


  self.isTouchDevice = function(){
    return app.helper.detections.isTouchDevice;
  };

  self.isRetina = function(){
    return self.detections.isRetina;
  };

  self.supportsHistory = function(){
    return app.helper.detections.supportsHistory;
  };

  self.supportsTransitions = function(){
    return app.helper.detections.supportsTransitions;
  };

  self.url = function(url){
    if (! (app.address && app.address.ready && $.address)) {
      if (url.indexOf('http') < 0) {
        url = $('base').attr('href') + url;
      }

      window.location.href = url;
    } else {
      $.address.path(url);
    }
  };

  return self;

})(window, window.document, jQuery, {});

/* **********************************************
     Begin layout.js
********************************************** */

app.layout = (function(window, document, $, layout, undefined){

  layout.resize = function(){
    console.log('window width: ' + app.window.width);

    app.layout.global.resize();
  };

  layout.loaded = function(){
    app.layout.global.loaded();
  };

  layout.setup = function(){
    $('[data-span-desktop]').each(function(){
      if (! $(this).attr('data-span-wide')) {
        $(this).attr('data-span-wide', $(this).attr('data-span-desktop'));
      }
    });

    app.layout.global.setup();
  };

  layout.match = function(){
    console.log('match: ' + app.is);

  /*
    // Adjust Grid-Layout based on data-attribute
    $('[data-span-'+app.is+']').each(function(){
      $(this).removeClass('span0 span1 span2 span3 span4 span5 span6 span7 span8 span9 span10 span11 span12');
      $(this).addClass('span' + $(this).attr('data-span-'+app.is).replace('span', ''));
    });
  */

    // dynamically add classes based on data-attribute
    $('[data-classes-'+app.is+']').each(function(){
      $(this).addClass($(this).attr('data-classes-'+app.is));
    });

    $('[data-breakpoint-'+app.is+']').each(function(){
      $(this).remove().insertAfter($($(this).attr('data-breakpoint-'+app.is)));
    });

    app.layout.global.match();
  };

  layout.unmatch = function(){
    console.log('unmatch: ' + app.was);
    
    // dynamically remove classes based on data-attribute
    $('[data-classes-'+app.was+']').each(function(){
      $(this).removeClass($(this).attr('data-classes-'+app.was));
    });

    app.layout.global.unmatch();
  };



  layout.ajaxComplete = function(e, xhr, settings){
    setTimeout(layout.initializeNewContent, 250);
  };

  layout.initializeNewContent = function(){
    layout.match();
    app.layout[app.is].match();

    $(window).trigger('resize');
    layout.resize();
    app.layout[app.is].resize();
  };

  return layout;

})(window, window.document, jQuery, {});

/* **********************************************
     Begin global.js
********************************************** */

app.layout.global = (function(window, document, $, layout, undefined){

  layout.resize = function(){
    $('.project-detail').css('height', $(window).height() - $('#header').height() - $('#footer').height());
    $('.project-detail').css('position', 'relative');
    $('.project-detail').css('top', $('#header').height());
  };

  layout.loaded = function(){
    $('.responsive-image').unveil();
  };

  layout.setup = function(){
    $('.hate').click(function(e){
      e.preventDefault();

      var el = $(this);
      var url = $(this).attr('href');

      $.get(url, function(result){
        el.find('.text').html(result);
      });
    });
  };

  layout.match = function(){
  };

  layout.unmatch = function(){
  };

  return layout;

})(window, window.document, jQuery, {});

/* **********************************************
     Begin wide.js
********************************************** */

app.layout.wide = (function(window, document, $, layout, undefined){

  layout.query = 'screen and (min-width: 1300px)';

  layout.setup = function(){
  };

  layout.match = function(){
    app.is = 'wide';
  };

  layout.unmatch = function(){
    app.was = 'wide';
  };

  layout.resize = function(){
  };

  return layout;

})(window, window.document, jQuery, {});

/* **********************************************
     Begin desktop.js
********************************************** */

app.layout.desktop = (function(window, document, $, layout, undefined){

  layout.query = 'screen and (min-width: 980px) and (max-width: 1299px)';

  layout.setup = function(){
  };

  layout.match = function(){
    app.is = 'desktop';
  };

  layout.unmatch = function(){
    app.was = 'desktop';
  };

  layout.resize = function(){
  };

  return layout;

})(window, window.document, jQuery, {});

/* **********************************************
     Begin tablet.js
********************************************** */

app.layout.tablet = (function(window, document, $, layout, undefined){

  layout.query = 'screen and (min-width: 768px) and (max-width: 979px)';

  layout.setup = function(){
  };

  layout.match = function(){
    app.is = 'tablet';
  };

  layout.unmatch = function(){
    app.was = 'tablet';
  };

  layout.resize = function(){
  };

  return layout;

})(window, window.document, jQuery, {});

/* **********************************************
     Begin mobile.js
********************************************** */

app.layout.mobile = (function(window, document, $, layout, undefined){

  layout.query = 'screen and (max-width: 767px)';

  layout.setup = function(){
  };

  layout.match = function(){
    app.is = 'mobile';
  };

  layout.unmatch = function(){
    app.was = 'mobile';
  };

  layout.resize = function(){
  };

  return layout;

})(window, window.document, jQuery, {});

/* **********************************************
     Begin main.js
********************************************** */

(function($, window, document, undefined){

  if (app.route) {
    app.route.init($('base').attr('href'), ['language', 'controller', 'action', 'id'], {language: 'de'});
  }

  if (app.address && app.helper.supportsHistory()) {
    app.address.init($('[data-state]').attr('data-state') || '/', app.template);
    app.template.render();
  }

  if (app.helper) {
    $('html').addClass(app.helper.isTouchDevice() ? 'touch' : 'no-touch');
    $('html').addClass(app.helper.supportsHistory() ? 'history' : 'no-history');
    $('html').addClass(app.helper.supportsTransitions() ? 'transitions' : 'no-transitions');
    $('html').addClass(app.helper.isRetina() ? 'retina' : 'no-retina');
  }

  if ($.client) {
    $('html').addClass('browser-'+$.client.browser.toLowerCase());
    $('html').addClass('browser-version-'+$.client.version);
    $('html').addClass('os-'+$.client.os.toLowerCase());
    if (BrowserDetect.webkit) jQuery('html').addClass('webkit');
  }

  //$(document).ajaxComplete(app.layout.ajaxComplete);

})(jQuery, window, window.document);

/* **********************************************
     Begin initialize.js
********************************************** */

(function($, window, document, undefined){

  // delegate resizing
  var resizeTimeout;
  var storeSize = {width: 0, height: 0};

  app.window = {width: 0, height: 0};
  app.document = {width: 0, height: 0};

  var resize = function(){
    if (resizeTimeout) window.clearTimeout(resizeTimeout);
    resizeTimeout = window.setTimeout(triggerResize, 25);
  };

  var triggerResize = function(){
    if (resizeTimeout) window.clearTimeout(resizeTimeout);

    app.window = {
      width: $(window).width(),
      height: $(window).height()
    };

    app.document = {
      width: $(document).width(),
      height: $(document).height()
    };

    // only dispatch resize if it's not a "fake"-resizing
    // fix error on iphone
    if (app.window.width === storeSize.width && app.window.height === storeSize.height) {
      return false;
    }

    storeSize = app.window;

    app.layout.resize();

    // fix css vw / vh value bugs
    $('body').slideUp(0);
    $('body').slideDown(0);

    if (app.layout[app.is] && app.layout[app.is].resize) {
      app.layout[app.is].resize();
    }
  };

  $(window).resize(resize);
  $(document).ready(resize);
  $(window).load(function(){
    storeSize = {width: 0, height: 0};
    app.layout.loaded();
    triggerResize();
  });

  window.setTimeout(resize, 350);


  // Fix width bug on iPhone
  $(window).bind('orientationchange', function(e){
    setTimeout(function(){
      $('body').slideUp(10);
      $('body').slideDown(10);
      $(window).trigger('resize');
    }, 500);
  });


  // Internet Explorer has bug in enquire
  if (typeof enquire === 'undefined' || $.client.browser == 'Explorer' && $.client.version < 9) {
    app.layout.desktop.setup();
    app.layout.desktop.match();
    
    app.layout.setup();
    app.layout.match();

    return;
  }


  // initialize enquire and start firing events

  for (var k in app.layout) {
    var layout = app.layout[k];

    if (layout.query) {
      enquire.register(layout.query, [
        {
          match: layout.match,
          unmatch: layout.unmatch,
          setup: layout.setup
        },
        {
          match: app.layout.match,
          unmatch: app.layout.unmatch
        }
      ]);
    }
  }

  enquire.listen(100);
  triggerResize();
  app.layout.setup();

})(jQuery, window, window.document);

/* **********************************************
     Begin app.js
********************************************** */

//@codekit-prepend "partials/closure.top.js"
//@codekit-append  "partials/closure.bottom.js"

//@codekit-prepend "vendor/enquire.js"

//@codekit-prepend "plugins.js"
//@codekit-prepend "plugins/jquery.responsiveImage.js"
//@codekit-prepend "plugins/vendor/jquery.unveil.js"

//@codekit-prepend "app/config.js"
//@codekit-prepend "app/helper.js"
//@codekit-prepend "app/layout.js"
//@codekit-prepend "app/layout/global.js"
//@codekit-prepend "app/layout/wide.js"
//@codekit-prepend "app/layout/desktop.js"
//@codekit-prepend "app/layout/tablet.js"
//@codekit-prepend "app/layout/mobile.js"

//@codekit-prepend "main.js"
//@codekit-prepend "initialize.js"

/* **********************************************
     Begin closure.bottom.js
********************************************** */


window.app = app;

})(window, window.document, jQuery);